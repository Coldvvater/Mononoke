# Clash Config Make by Coldvvater
# TG Channel: https://t.me/Coldvvater_Channel
# GitHub: https://github.com/Coldvvater
# Update Date: 2025.03.28

#port: 7891                          # HTTP(S) 代理服务器端口
#socks-port: 7892                    # SOCKS5 代理端口
mixed-port: 7890                     # 混合端口，HTTP和SOCKS5用一个端口
#redir-port: 7893                    # 透明代理端口，用于 Linux 和 MacOS
#tproxy-port: 7894                   # Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)

mode: rule                           # 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）/ script (脚本)
log-level: silent                      # 设置日志输出级别 (5 个级别：silent / error / warning / info / debug）
allow-lan: true                      # 允许局域网的连接（共享代理）
bind-address: "*"                    # 监听IP白名单，可绑定单个IPv4和v6地址，"*" 为绑定所有IP地址，仅在将allow-lan设置为true时适用
ipv6: true                           # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
udp: true                            # 是否允许 UDP 通过代理，默认为 false

unified-delay: true                  # 开启统一延迟时，会进行两次延迟测试，以消除连接握手等带来的不同类型节点的延迟差异，可选值 true/false
tcp-concurrent: true                 # TCP 并发，可选值 true/false
find-process-mode: strict            # 控制是否让 Clash 去匹配进程，always 开启，强制匹配所有进程，strict 默认，由 Clash 判断是否开启，off 不匹配进程，推荐在路由器上使用此模式
global-client-fingerprint: chrome    # 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint，目前支持开启 TLS 传输的 TCP/grpc/WS/HTTP , 支持协议有 VLESS,Vmess 和 trojan

external-controller: 127.0.0.1:9090  # 外部控制器，可以使用 RESTful API 来控制你的 Clash 内核，API 监听地址，你可以将 127.0.0.1 修改为 0.0.0.0 来监听所有 IP
external-ui: WebUI/ZashBoard                      # 可以将静态网页资源 (比如 Clash-dashboard) 运行在 Clash API, 路径为 API 地址/ui，可以为绝对路径，或者 Clash 工作目录的相对路径
external-ui-url: 'https://github.com/Zephyruso/zashboard/releases/latest/download/dist.zip'
                                     # 自定义外部用户界面下载地址

secret: ""                           # 自定义 API 的访问密钥

profile:
  store-selected: true               # 储存 API 对策略组的选择，以供下次启动时使用
  store-fake-ip: true                # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址

sniffer:
  enable: true                       # 是否启用sniffer
  force-dns-mapping: true            # 对 redir-host 类型识别的流量进行强制嗅探
  parse-pure-ip: true                # 对所有未获取到域名的流量进行强制嗅探
  override-destination: true         # 是否使用嗅探结果作为实际访问，默认为 true

  sniff:
    HTTP:
      ports: [80, 8080-8880]         # ports字段，表示端口范围。示例：ports: [80, 8080-8880]
      override-destination: true     # override-destination字段（可选），用于覆盖全局override-destination设置
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:                      # 需要强制嗅探的域名（默认情况下只对IP进行嗅探）
    - +.v2ex.com
  skip-domain:                       # 需要跳过嗅探的域名。主要解决部分站点sni字段非域名，导致嗅探结果异常的问题，如米家设备Mijia Cloud
    - Mijia Cloud

tun:
  enable: true                       # 启用 tun
  stack: gvisor                       # tun 模式堆栈,可用值：system/gvisor/mixed
  dns-hijack: [any:53]               # dns 劫持，将匹配到的连接导入内部 dns 模块，不书写协议则为 udp://
  auto-route: true                   # 自动设置全局路由，可以自动将全局流量路由进入 tun 网卡               
  auto-detect-interface: true        # 自动选择流量出口接口，多出口网卡同时连接的设备建议手动指定出口网卡

dns:
  enable: true                       # 关闭将使用系统 DNS
  prefer-h3: false                   # 优先使用 DOH 的 http/3
  listen: 0.0.0.0:1053               # DNS 监听地址
  ipv6: true                         # IPV6解析开关；如果为false，将返回ipv6结果为空
  enhanced-mode: fake-ip             # 模式：redir-host或fake-ip
  fake-ip-range: 198.18.0.0/16       # Fake-IP 解析地址池
  fake-ip-filter: ['*', '+.lan', '+.local', '+.market.xiaomi.com', '+.msftconnecttest.com', '+.msftncsi.com']
                                     # Fake-ip 过滤，列表中的域名返回真实IP
  respect-rules: true                # dns 连接跟随 rules，需配置 proxy-server-nameserver
  default-nameserver: [223.5.5.5, 119.29.29.29]
                                     # 解析非IP的dns用的dns服务器，只支持纯IP, 可为加密 DNS
  proxy-server-nameserver: [https://dns.alidns.com/dns-query, https://doh.pub/dns-query]
                                     # 代理节点域名解析服务器，仅用于解析代理节点的域名
  nameserver: [https://dns.alidns.com/dns-query, https://doh.pub/dns-query]
                                     # 默认DNS服务器，支持udp/tcp/dot/doh/doq
  nameserver-policy:                 # 指定域名查询的解析服务器，可使用 geosite, 优先于 nameserver/fallback 查询
    rule-set:cn-site,private-domain: [https://dns.alidns.com/dns-query, https://doh.pub/dns-query]
    rule-set:proxy-domain: [https://dns.google/dns-query, https://dns.cloudflare.com/dns-query]

######### 锚点 start #########

# 规则类型相关
rule-anchor:
  mrs: &mrs {type: http, interval: 86400, behavior: domain, format: mrs}
  mrsip: &mrsip {type: http, interval: 86400, behavior: ipcidr, format: mrs}

# 节点筛选相关
HK: &HK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
TW: &TW '^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
JP: &JP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
SG: &SG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
US: &US '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
All: &All '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|Traffic|Expire|EMAIL|Panel|Channel|Author)\b|(\d{4}-\d{2}-\d{2}|\d+G)))).*$'

# 代理组相关
Select: &Select {type: select, proxies: [Proxy, HongKong, TaiWan, Japan, Singapore, America, AllServer, DIRECT]}

UrlTest: &UrlTest {type: url-test, interval: 300, tolerance: 20, lazy: true, url: 'http://www.gstatic.com/generate_204', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}

FallBack: &FallBack {type: fallback, interval: 300, lazy: true, url: 'http://www.gstatic.com/generate_204', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}

LoadBalance: &LoadBalance {type: load-balance, interval: 300, lazy: true, url: 'http://www.gstatic.com/generate_204', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}

# 远程订阅相关
p: &p {type: http, interval: 42300, health-check: {enable: true, url: http://www.gstatic.com/generate_204, interval: 300}}

######### 锚点 end #########

# 本地服务器
proxies: null

# 远程订阅
proxy-providers: 
  Subscribe: {<<: *p, path: ./proxy_providers/subscribe.yaml, url: "https://mxlsub.me/free"}
# 1. 请把订阅链接填入引号""内使用,
# 2. 或可通过Sub-Store进行订阅转换(或需自建Sub-Store服务)。

# 代理组
proxy-groups: 

# 漏网之鱼
 - {name: Final, icon: https://gh-proxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png, <<: *Select, proxies: [Proxy,DIRECT]}

# 节点切换
 - {name: Proxy, icon: https://gh-proxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Rocket.png, <<: *Select, proxies: [America,TaiWan,Japan,Singapore,HongKong,AllServer,DIRECT]}

# AI平台
 - {name: AI, icon: https://gh-proxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ChatGPT.png, <<: *Select}

# Emby
 - {name: Emby, icon: https://gh-proxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Emby.png, <<: *Select}

# 哔哩哔哩
 - {name: Bilibili, icon: https://gh-proxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/bilibili_3.png, <<: *Select, proxies: [DIRECT,HongKong,TaiWan]}

# Telegram
 - {name: Telegram, icon: https://gh-proxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram_X.png, <<: *Select}
 
# Github
 - {name: Github, icon: https://gh-proxy.com/https://github.com/sooyaaabo/Loon/blob/main/Icon/App-Icon/GitHub-02.png, <<: *Select}

# 谷歌服务
 - {name: Google, icon: https://gh-proxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png, <<: *Select}

# 地区节点代理组
 - {name: HongKong, icon: https://gh-proxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png, type: select, proxies: [HK-Auto, HK-FallBack, HK-LoadBalance], include-all-providers: true, filter: *HK}
 - {name: TaiWan, icon: https://gh-proxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/China.png, type: select, proxies: [TW-Auto, TW-FallBack, TW-LoadBalance], include-all-providers: true, filter: *TW}
 - {name: Japan, icon: https://gh-proxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png, type: select, proxies: [JP-Auto, JP-FallBack, JP-LoadBalance], include-all-providers: true, filter: *JP}
 - {name: Singapore, icon: https://gh-proxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png, type: select, proxies: [SG-Auto, SG-FallBack, SG-LoadBalance], include-all-providers: true, filter: *SG}
 - {name: America, icon: https://gh-proxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png, type: select, proxies: [US-Auto, US-FallBack, US-LoadBalance], include-all-providers: true, filter: *US}

# 全部节点
 - {name: AllServer, icon: https://gh-proxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Airport.png, type: select, proxies: [All-Auto], include-all-providers: true, filter: *All}

# 延时优选代理组
 - {name: HK-Auto, <<: *UrlTest, filter: *HK}
 - {name: TW-Auto, <<: *UrlTest, filter: *TW}
 - {name: JP-Auto, <<: *UrlTest, filter: *JP}
 - {name: SG-Auto, <<: *UrlTest, filter: *SG}
 - {name: US-Auto, <<: *UrlTest, filter: *US}

# 故障转移代理组
 - {name: HK-FallBack, <<: *FallBack, filter: *HK}
 - {name: TW-FallBack, <<: *FallBack, filter: *TW}
 - {name: JP-FallBack, <<: *FallBack, filter: *JP}
 - {name: SG-FallBack, <<: *FallBack, filter: *SG}
 - {name: US-FallBack, <<: *FallBack, filter: *US}

# 负载均衡代理组
 - {name: HK-LoadBalance, <<: *LoadBalance, filter: *HK}
 - {name: TW-LoadBalance, <<: *LoadBalance, filter: *TW}
 - {name: JP-LoadBalance, <<: *LoadBalance, filter: *JP}
 - {name: SG-LoadBalance, <<: *LoadBalance, filter: *SG}
 - {name: US-LoadBalance, <<: *LoadBalance, filter: *US}

# 全部节点延时优选
 - {name: All-Auto, <<: *UrlTest, filter: *All}

# 远程规则集
rule-providers:
# 隐私网络/局域网
 private-domain:
    <<: *mrs
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs'
 
 private-ip:
    <<: *mrsip
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs'

# AI平台
 ai-domain:
    <<: *mrs
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs'

# Emby
 emby-domain:
    <<: *mrs
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/Lanlan13-14/Rules/refs/heads/main/rules/Domain/emby.mrs'
    
 emby-ip:
    <<: *mrsip
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/Lanlan13-14/Rules/refs/heads/main/rules/IP/emby-ip.mrs'

# 哔哩哔哩
 bilibili-domain:
    <<: *mrs
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bilibili.mrs'
 
 bilibili-ip:
    <<: *mrsip
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geoip/bilibili.mrs'
       
# Telegram
 telegram-domain:
    <<: *mrs
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs'

 telegram-ip:
    <<: *mrsip
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs'

# GitHub
 github-domain:
    <<: *mrs
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs'

# 谷歌服务
 google-domain:
    <<: *mrs
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs'

 google-ip:
    <<: *mrsip
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs'

# 国内网站
 cn-site:
    <<: *mrs
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs'

 cn-ip:
    <<: *mrsip
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs'

# 国外网站
 proxy-domain:
    <<: *mrs
    url: 'https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs'

# 分流规则引用
rules:
  - DOMAIN,board.zash.run.place,DIRECT
  
  - RULE-SET,private-domain,DIRECT
  - RULE-SET,ai-domain,AI
  - RULE-SET,emby-domain,Emby
  - RULE-SET,bilibili-domain,Bilibili
  - RULE-SET,telegram-domain,Telegram
  - RULE-SET,github-domain,Proxy
  - RULE-SET,google-domain,Google
  - RULE-SET,proxy-domain,Proxy
  - RULE-SET,cn-site,DIRECT

  - RULE-SET,google-ip,Google,no-resolve
  - RULE-SET,telegram-ip,Telegram,no-resolve
  - RULE-SET,bilibili-ip,Bilibili,no-resolve
  - RULE-SET,emby-ip,Emby,no-resolve
  - RULE-SET,private-ip,DIRECT,no-resolve
  - RULE-SET,cn-ip,DIRECT,no-resolve
  - MATCH,Final
