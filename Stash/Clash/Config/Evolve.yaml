# Stash/Clash/(Premium/Meta) Config Make by Coldvvater
# TG Channel: https://t.me/Ison_Channel
# GitHub: https://github.com/Coldvvater
# Update Date: 2023.06.04

# 自选GEOIP数据库推荐使用: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb

# subscribe-url:      # 填上你的订阅链接用于Stash获取机场流量信息并在主页显示

mixed-port: 7890      # 混合端口 HTTP和SOCKS5用一个端口
allow-lan: true       # 允许局域网的连接（可用来共享代理）
bind-address: "*"     # 仅在将allow-lan设置为true时适用
                      # #"*": 绑定所有IP地址
ipv6: false           # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
mode: rule            # 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）/ script (脚本)
log-level: info       # 设置日志输出级别 (5 个级别：silent / error / warning / info / debug）

external-controller: 127.0.0.1:9090   #外部控制器,可以使用 RESTful API 来控制你的 clash 内核

dns:
  enable: true             # 关闭将使用系统 DNS
  ipv6: true               # IPV6解析开关；如果为false，将返回ipv6结果为空
  enhanced-mode: fake-ip   # 模式：redir-host或fake-ip
  listen: 0.0.0.0:1053     # DNS 监听地址
  default-nameserver:      # 解析非IP的dns用的dns服务器，只支持纯IP，（可为其加密）
     - 223.5.5.5
     - 119.29.29.29
     - 114.114.114.114

  fake-ip-range: 198.18.0.1/16  # Fake-IP 解析地址池
  fake-ip-filter:               # Fake-ip 过滤，列表中的域名返回真实IP
    - '+.lan'
    - localhost.ptlogin2.qq.com
    - '*.battle.net'
    - '*.blzstatic.cn'
    - '*.battlenet.com'
    - '*.battlenet.com.cn'
    - 'lens.l.google.com'
    - '+.srv.nintendo.net'
    - '+.stun.playstation.net'
    - '+.msftncsi.com'
    - '+.xboxlive.com'
    - 'msftconnecttest.com'
    - 'xbox.*.*.microsoft.com'
    - 'xbox.*.microsoft.com'         
    - '+.msftconnecttest.com'
    - '*.msftncsi.com'
    - '*.msftconnecttest.com'
    - '*.mcdn.bilivideo.cn'

  nameserver:             # 默认DNS服务器，支持udp/tcp/dot/doh/doq
    - https://223.5.5.5/dns-query
    - https://1.12.12.12/dns-query

# 此处为修正 Stash 因从 WiFi 切换至蜂窝网络时 DNS 无法及时更新而导致 fake-ip 失效某些网站无法打开问题
# 请在 Stash APP 的设置页面 "网络设置" 中开启 "Fallback DNS" 以使用此功能
  fallback: #!replace
    - https://dns.alidns.com/dns-query

  fallback-filter: 
    geoip: false
    geoip-code: CN
    ipcidr:
      - '198.18.0.1/16'

###锚点

# 规则行为相关
c: &c {type: http, behavior: classical, interval: 86400}

d: &d {type: http, behavior: domain, interval: 8640
# 远程订阅相关
p: &p {type: http, interval: 42300, health-check: {enable: true, url: http://www.gstatic.com/generate_204, interval: 300}}

# 代理组相关
g: &g {type: select, proxies: [Proxy, Auto, Fallback, HongKong, TaiWan, Singapore, Japan, America, Others, DIRECT]}

m: &m {type: select, proxies: [DIRECT, Proxy, Auto, Fallback, HongKong, TaiWan, Singapore, Japan, America, Others]}


proxies:   # 本地服务器

# 订阅引用相关
u: &u {type: select, use: [MySubs]}

proxy-providers: # 远程订阅
  MySubs: {<<: *p, path: ./proxy_providers/mysubs.yaml, url: ""}
# 1. 请使用Clash类型订阅链接填入引号""内使用,
# 2. 或可使用通用订阅链接通过Sub-Store进行订阅转换(用于Stash)。

proxy-groups:    # 代理组

# 漏网之鱼
 - {name: Final, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Final.png, <<: *g, proxies: [Proxy,DIRECT]}

# 节点切换
 - {name: Proxy, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Rocket.png, <<: *g, proxies: [Auto,Fallback,HongKong,TaiWan,Singapore,Japan,America,Others]}

# 自动选择
 - {name: Auto, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Auto.png, type: url-test, lazy: true, <<: *u}

# 故障转移
 - {name: Fallback, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Available.png, type: fallback, <<: *u}

# 国外网站
 - {name: Global, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Global.png, <<: *g}

# 国内网站
 - {name: Mainland, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/China_Map.png, <<: *m}

# YouTube
 - {name: YouTube, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/YouTube.png, <<: *g}

# NETFLIX
 - {name: NETFLIX, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Netflix.png, <<: *g}

# Disney+
 - {name: Disney+, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Disney%2B.png, <<: *g}

# Emby
 - {name: Emby, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Emby.png, <<: *g}

# 哔哩哔哩
 - {name: BiliBili, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/bilibili.png, <<: *m, proxies: [DIRECT,HongKong,TaiWan]}

# 声田音乐
 - {name: Spotify, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Spotify.png, <<: *g}

# 网易云音乐
 - {name: NetEaseMusic, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Netease_Music.png, <<: *m, proxies: [DIRECT]}

# 海外抖音
 - {name: TikTok, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/TikTok.png, <<: *g}

# 国际媒体
 - {name: Streaming, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Streaming.png, <<: *g}

# 电报信息
 - {name: Telegram, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Telegram_X.png, <<: *g}

# 苹果服务
 - {name: Apple, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Apple.png, <<: *m}

# 谷歌服务
 - {name: Google, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Google.png, <<: *g}

# 微软服务
 - {name: Microsoft, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Microsoft.png, <<: *m}

# 游戏平台
 - {name: Games, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Game.png, <<: *g}

# 香港节点
 - {name: HongKong, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Hong_Kong.png, <<: *u, filter: "港|🇭🇰|HK|(?i)Hong"}

# 台湾节点
 - {name: TaiWan, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/China.png, <<: *u, filter: "台|🇨🇳|🇹🇼|湾|TW|(?i)Taiwan"}

# 狮城节点
 - {name: Singapore, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Singapore.png, <<: *u, filter: "新加坡|坡|狮城|🇸🇬|SG|(?i)Singapore"}

# 日本节点
 - {name: Japan, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Japan.png, <<: *u, filter: "日|🇯🇵|东京|JP|(?i)Japan"}

# 美国节点
 - {name: America, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/United_States.png, <<: *u, filter: "美|🇺🇲|US|(?i)States|American"}

# 其他节点
 - {name: Others, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Airport.png, <<: *u, filter: "^((?!香港|HK|Hong Kong|台湾|TW|TaiWan|新加坡|SG|Singapore|狮城|日本|JP|Japan|美国|US|States|American|Music).)*$"}

rule-providers: # 远程规则集

# 隐私网络
 Private: {<<: *d, path: ./ruleset/Private.yaml, url: https://rules.kr328.app/private.yaml}

# OpenAI
 OpenAI: {<<: *d, path: ./ruleset/OpenAI.yaml, url: https://rules.kr328.app/openai.yaml}

# 油管视频
 YouTube: {<<: *d, path: ./ruleset/YouTube.yaml, url: https://rules.kr328.app/youtube.yaml}

# 奈飞视频
 Netflix: {<<: *d, path: ./ruleset/Netflix.yaml, url: https://rules.kr328.app/netflix.yaml}

# 迪士尼+
 Disney: {<<: *d, path: ./ruleset/Disney.yaml, url: https://rules.kr328.app/disney.yaml}

# Emby
 Emby: {<<: *c, path: ./ruleset/Emby.yaml, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Emby/Emby.yaml}

# 动画疯
 Bahamut: {<<: *d, path: ./ruleset/Bahamut.yaml, url: https://rules.kr328.app/bahamut.yaml}

# 哔哩哔哩东南亚
 BiliIntl: {<<: *d, path: ./ruleset/BiliIntl.yaml, url: https://rules.kr328.app/bilibili@%21cn.yaml}

# 哔哩哔哩
 BiliBili: {<<: *c, path: ./ruleset/BiliBili.yaml, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/BiliBili/BiliBili.yaml}

# 声田音乐
 Spotify: {<<: *d, path: ./ruleset/Spotify.yaml, url: https://rules.kr328.app/spotify.yaml}

# 网易云音乐
 NetEaseMusic: {<<: *c, path: ./ruleset/NetEaseMusic.yaml, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/NetEaseMusic/NetEaseMusic.yaml}

# 海外抖音
 TikTok: {<<: *d, path: ./ruleset/TikTok.yaml, url: https://rules.kr328.app/tiktok.yaml}

# 国际媒体
 GlobalMedia_Domain: {<<: *d, path: ./ruleset/GlobalMedia_Domain.yaml, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GlobalMedia/GlobalMedia_Domain.yaml}

# 电报信息
 Telegram: {<<: *d, path: ./ruleset/Telegram.yaml, url: https://rules.kr328.app/telegram.yaml}

# GitHub
 GitHub: {<<: *d, path: ./ruleset/GitHub.yaml, url: https://rules.kr328.app/github.yaml}

# 必应搜索
 Bing: {<<: *d, path: ./ruleset/Bing.yaml, url: https://rules.kr328.app/bing.yaml}

# Twitter
 Twitter: {<<: *d, path: ./ruleset/Twitter.yaml, url: https://rules.kr328.app/twitter.yaml}

# TestFlight
 TestFlight: {<<: *c, path: ./ruleset/TestFlight.yaml, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/TestFlight/TestFlight.yaml}

# 苹果服务
 Apple: {<<: *d, path: ./ruleset/Apple.yaml, url: https://rules.kr328.app/apple.yaml}

# 谷歌服务
 Google: {<<: *d, path: ./ruleset/Google.yaml, url: https://rules.kr328.app/google.yaml}

# 微软服务
 Microsoft: {<<: *d, path: ./ruleset/Microsoft.yaml, url: https://rules.kr328.app/microsoft.yaml}

# 游戏平台
 Games: {<<: *c, path: ./ruleset/Games.yaml, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Game/Game.yaml}

# 国内网站
 China_Domain: {<<: *d, path: ./ruleset/China_Domain.yaml, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/China/China_Domain.yaml}

# 国外网站
 Global_Domain: {<<: *d, path: ./ruleset/Global_Domain.yaml, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Global/Global_Domain.yaml}

rules: # 分流规则引用
  - DOMAIN,dns.alidns.com,DIRECT
  - RULE-SET,Private,DIRECT
  - RULE-SET,OpenAI,America
  - RULE-SET,YouTube,YouTube
  - RULE-SET,Netflix,NETFLIX
  - RULE-SET,Disney,Disney+
  - RULE-SET,Emby,Emby
  - RULE-SET,Bahamut,TaiWan
  - RULE-SET,BiliIntl,Streaming
  - RULE-SET,BiliBili,BiliBili,no-resolve
  - RULE-SET,Spotify,Spotify
  - RULE-SET,NetEaseMusic,NetEaseMusic,no-resolve
  - RULE-SET,TikTok,TikTok
  - RULE-SET,GlobalMedia_Domain,Streaming
  - RULE-SET,Telegram,Telegram
  - RULE-SET,GitHub,Global
  - RULE-SET,Bing,Global
  - RULE-SET,Twitter,Global
  - RULE-SET,TestFlight,Global
  - RULE-SET,Apple,Apple
  - RULE-SET,Google,Google
  - RULE-SET,Microsoft,Microsoft
  - RULE-SET,Games,Games,no-resolve
  - RULE-SET,Global_Domain,Global
  - GEOIP,google,Google
  - GEOIP,telegram,Telegram
  - GEOIP,netflix,NETFLIX
  - RULE-SET,China_Domain,Mainland
  - GEOIP,private,DIRECT
  - GEOIP,CN,Mainland
  - MATCH,Final
